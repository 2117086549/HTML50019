function Dog(e,t){this.id=e,this.game=t,$('<div id="'+this.id+'" class="theDog"></div>').appendTo(this.game),this.DOM=$("#"+this.id),this.DOM.hide()}function Duck(e,t,n,r){return this.id=e,this.className=t,this.speed=0,this.game=r,this.DOM=null,this.setSpeed(n),this.hatch(),this}function Gun(e,t){this.name=e.name,this.spread=e.spread,this.reloadTime=e.reloadTime,this.audio1=$(e.audio1),this.audio2=$(e.audio2),this.game=t,this.ammo=0,this.lastAudio=null}function Player(e,t){this.id=e,this.name=t,this.score=0,this.totalKills=0,this.totalMisses=0,this.shotsTaken=0,this.levelStats=[],this.weapon=null}Dog.prototype.intro=function(){this.DOM.addClass("searchDog"),this.DOM.show(),this.DOM.sprite({fps:6,no_of_frames:4}),this.DOM.animate({left:"240"},5e3,"linear",function(){$(this).destroy(),$(this).css("background-position","-632px 0px"),setTimeout(_.bind(function(){this.css({"background-image":"url(images/jumpDog.png)",bottom:"75px","background-position":"0 0"}),this.sprite({fps:50,no_of_frames:2,play_frames:2}),this.fadeOut().promise().then(_.bind(function(){this.attr("style",""),this.removeClass("searchDog")},this)),this.spStop(),this.destroy()},$(this)),500)})},Dog.prototype.fetch=function(){this.DOM.show(),this.DOM.css("background-position","0px 0px"),this._upDown()},Dog.prototype.laugh=function(){this.DOM.stop(!0,!1),this.DOM.show(),this.DOM.css("background-position","-276px 0px"),this._upDown()},Dog.prototype._upDown=function(){this.DOM.animate({bottom:"110"},400,function(){setTimeout(_.bind(function(){this.animate({bottom:"-10"},500)},$(this)),700)})},Duck.prototype.bindEvents=function(){var e=this;this.DOM.on("mousedown",function(){e.die()})},Duck.prototype.unbindEvents=function(){this.DOM.off("mousedown")},Duck.prototype.die=function(){var e=this;return this.game.trigger("duck:died",e),$._spritely.instances[this.id].stop_random=!0,this.DOM.stop(!0,!1),this.DOM.addClass("deadSpin"),this.DOM.spStop(!0),this.DOM.spState(5),setTimeout(function(){e.deathSpin()},500),this},Duck.prototype.deathSpin=function(){this.DOM.spState(6),this.DOM.spStart(),this.DOM.animate({top:"420"},800,function(){delete $._spritely.instances[this.id],$(this).attr("class","deadDuck")})},Duck.prototype.hatch=function(){$('<div id="'+this.id+'" class="duck '+this.className+'"></div>').appendTo(this.game),this.DOM=$("#"+this.id),this.bindEvents()},Duck.prototype.fly=function(){var e=this;return this.DOM.sprite({fps:6,no_of_frames:3,start_at_frame:1}),this.DOM.spRandom({top:400,left:700,right:0,bottom:0,speed:e.speed,pause:0}),this},Duck.prototype.escape=function(){return this.unbindEvents(),this.DOM.hasClass("deadSpin")||(this.game.trigger("duck:miss"),this.game.animate({backgroundColor:"#fbb4d4"},900),$._spritely.instances[this.id].stop_random=!0,this.DOM.spState(2),this.DOM.animate({top:"-200",left:"460"},500,function(){delete $._spritely.instances[this.id],$(this).attr("class","deadDuck")})),this},Duck.prototype.setSpeed=function(e){switch(e){case 0:this.speed=3e3;break;case 1:this.speed=2800;break;case 2:this.speed=2500;break;case 3:this.speed=2e3;break;case 4:this.speed=1800;break;case 5:this.speed=1500;break;case 6:this.speed=1300;break;case 7:this.speed=1200;break;case 8:this.speed=800;break;case 9:this.speed=600;break;case 10:this.speed=500}},Gun.prototype.shoot=function(){this.ammo>0&&(this.ammo-=1,this.sound(),this.game.trigger("gun:fire")),this.ammo===0&&this.outOfAmmo()},Gun.prototype.sound=function(){this.lastAudio===this.audio1?(this.audio2.get(0).play(),this.lastAudio=this.audio2):(this.audio1.get(0).play(),this.lastAudio=this.audio1)},Gun.prototype.outOfAmmo=function(){this.game.trigger("gun:out_of_ammo")},Gun.prototype.getAmmo=function(){return this.ammo},Gun.prototype.setAmmo=function(e){this.ammo=e},Gun.prototype.reload=function(){this.game.trigger("gun:reloaded")},Gun.prototype.getSpread=function(){return this.spread},Gun.prototype.getReloadTime=function(){return this.reloadTime},Player.prototype.getScore=function(){return addCommas(this.score.toString())},Player.prototype.updateScore=function(e){this.score+=e,$("#scoreboard").html(Player.getScore())},Player.prototype.setWeapon=function(e){this.weapon=e},Player.prototype.getWeapon=function(){return this.weapon},Player.prototype.pushLevelStats=function(e){this.levelStats.push(e)};var duckhunt={playfield:"#game",level:null,curLevel:0,curWave:0,duckMax:0,waveEnding:!1,liveDucks:[],levelStats:{},player:new Player("1","Player 1"),gameTimers:{waveTimer:null},gameIntervals:{quackID:null},init:function(){this.playfield=$(this.playfield),this.player.setWeapon(new Gun(weapons.rifle,this.playfield)),this.playfield.on("wave:time_up",_.bind(function(e,t){this.endWave(t)},this)),this.playfield.on("wave:end",_.bind(function(e,t){this.endWave(t)},this)),this.playfield.on("game:next_level",_.bind(function(){this.nextLevel()},this)),this.playfield.on("game:defeat",_.bind(function(){this.defeat()},this)),this.playfield.on("game:victory",_.bind(function(){this.victory()},this)),this.playfield.on("duck:died",_.bind(function(e,t){this.killDuck(t)},this)),this.playfield.on("gun:out_of_ammo",_.bind(function(){this.outOfAmmo()},this)),this.playfield.on("gun:fire",_.bind(function(){this.flashScreen()},this))},bindInteractions:function(){this.playfield.on("click",_.bind(function(){this.fireGun()},this))},unbindInteractions:function(){this.playfield.off("click"),this.liveDucks.map(function(e){e.unbindEvents()})},loadLevel:function(e){this.clearTimers(),this.unbindInteractions(),e.id===0&&this.curLevel--,this.level=e,this.curWave=0,this.levelStats={levelID:this.level.id,totalDucks:this.level.ducks*this.level.waves,ducksKilled:0,shotsFired:0},this.doWave()},doWave:function(){var e=this;clearInterval(this.gameIntervals.quackID),this.curWave++;if(this.curWave>this.level.waves){this.playfield.trigger("game:next_level");return}this.playfield.animate({backgroundColor:"#64b0ff"},900),this.bindInteractions(),this.player.getWeapon().setAmmo(this.level.bullets),this.releaseDucks(),this.gameTimers.waveTimer=setTimeout(_.bind(function(e){this.playfield.trigger("wave:time_up",this.curWave)},this),this.level.time*1e3)},endWave:function(e){this.curWave==e&&!this.waveEnding&&(clearTimeout(this.gameTimers.waveTimer),this.waveEnding=!0,this.flyAway(),setTimeout(_.bind(function(){this.waveEnding=!1,this.doWave()},this),4e3))},nextLevel:function(){var e=this.levelStats.ducksKilled/this.levelStats.totalDucks*100;if(e<70){this.playfield.trigger("game:defeat");return}this.player.pushLevelStats(this.levelStats),this.curLevel+=1,this.curLevel===levels.length?this.playfield.trigger("game:victory"):this.loadLevel(levels[this.curLevel])},releaseDucks:function(){for(var e=0;e<this.level.ducks;e++){var t=e%2===0?"duckA":"duckB";this.duckMax++,this.liveDucks.push((new Duck(this.duckMax.toString(),t,this.level.speed,this.playfield)).fly())}},killDuck:function(e){this.levelStats.ducksKilled+=1,this.liveDucks=_(this.liveDucks).reject(function(t){return t.id===e.id}),this.liveDucks.length===0&&this.playfield.trigger("wave:end",this.curWave)},fireGun:function(){this.levelStats.shotsFired+=1,this.player.getWeapon().shoot()},outOfAmmo:function(){this.unbindInteractions(),this.playfield.trigger("wave:end",this.curWave)},flyAway:function(){this.liveDucks.map(function(e){e.escape()}),this.liveDucks=[]},victory:function(){this.unbindInteractions(),$(".winner").css("display","block")},defeat:function(){this.unbindInteractions(),$(".loser").css("display","block")},retry:function(){$(".messages").css("display","none"),this.loadLevel(levels[this.curLevel])},clearTimers:function(){_.map(this.gameTimers,function(e,t){clearTimeout(e)}),_.map(this.gameIntervals,function(e,t){clearInterval(e)})},clearField:function(){this.liveDucks.map(function(e){e.escape()}),this.liveDucks=[],$(".messages").css("display","none")},flashScreen:function(){$(".theFlash").css("display","block"),setTimeout(function(){$(".theFlash").css("display","none")},70)}},weapons={rifle:{name:"rifle",spread:0,reloadTime:0,audio1:"#gunSound",audio2:"#gunSound2"}},levels=[{id:1,title:"Level 1",waves:3,ducks:2,pointsPerDuck:100,speed:5,bullets:3,time:13},{id:2,title:"Level 2",waves:5,ducks:3,pointsPerDuck:100,speed:6,bullets:4,time:10},{id:3,title:"Level 3",waves:6,ducks:3,pointsPerDuck:100,speed:7,bullets:4,time:10},{id:4,title:"Level 4",waves:3,ducks:10,pointsPerDuck:100,speed:7,bullets:11,time:18},{id:5,title:"Level 5",waves:5,ducks:2,pointsPerDuck:100,speed:8,bullets:3,time:13},{id:6,title:"Level 6",waves:1,ducks:15,pointsPerDuck:100,speed:8,bullets:15,time:25}];